var searchfor = fn(string -> str, string -> inc) { 
    return searchfor:(str, inc, 0)
}

ovld searchfor = fn(string -> _str, string -> inc, int -> start) { 
    str := rmbegin:(_str, start)
    
    ;got from here https://coderscat.com/kmp-string-search-algorithm#:~:text=%20KMP%20String%20Search%20Algorithm%20%201%20Naive,the%20ckaon...%203%20KMP%20algorithm.%20%20More%20
    ;i dont know what algorithm this is called

    strlen := len:(str)
    inclen := len:(inc)

    i := 0
    o := 0

    while (i < strlen && o < inclen) {
        if (str::(i) == inc::(o)) {
            i++
            o++
        } else {
            i = i - o + 1
            o = 0
        }
    }

    if (o == inclen) return i - o
    else return (-1)
}
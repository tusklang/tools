var date = proto {

    ;a lot of the code here is ~~stolen~~ adapted from this stackoverflow post
    ;   https://stackoverflow.com/a/32158604/10696946
    ;thanks :D

    var year
    var month
    var day

    var hour
    var minute
    var second

    static var _SEC_IN_DAY = 86400 ;amount of seconds in 1 day

    static var new = fn(int -> unix) {
        splitted := date::_splitDaysAndSeconds:(unix)
        days := splitted::(0)
        seconds := splitted::(1)

        ;first get the hh:mm:ss
        hour := date::_getHour:(seconds)
        minute := date::_getMinute:(seconds)
        second := date::_getSecond:(seconds)
        ;;;;;;;;;;;;;;;;;;;;;;;

        ;then get the civil date
        civil := date::_getCivil:(days)
        ;;;;;;;;;;;;;;;;;;;;;;;;

        var datep = make:(date)
        datep::year = civil::0
        datep::month = civil::1
        datep::day = civil::2

        datep::hour = hour
        datep::minute = minute
        datep::second = second

        return datep
    }

    static var _splitDaysAndSeconds = fn(int -> unix) {
        ;split the unix time into 2 sections
        ;   1. the amount of days since the epoch
        ;   2. the leftover seconds

        seconds := unix % date::_SEC_IN_DAY
        days := (unix - seconds) / date::_SEC_IN_DAY

        return [days, seconds]
    }

    static var _getCivil = fn(int -> _days) {

        ;convert # of days since epoch into yy/mm/dd

        ;magic code stuffs that i dont really understand well
        ;all adapted from here
        ;   https://stackoverflow.com/a/32158604/10696946

        days := clone:(_days)
        days+=719468

        var era

        if (days >= 0) era = days
        else era = days - 146096

        era/=146097
        doe := days - era * 146097
        yoe := (doe - doe / 1460 + doe / 36524 - doe / 146096) / 365
        y := yoe + era * 400
        doy := doe - (365 * yoe + yoe / 4 - yoe / 100)
        mp := (5 * doy + 2) / 153
        d := doy - (153 * mp + 2) / 5 + 1

        var m = clone:(mp)
        if (mp < 10) m+=3
        else m-=9

        if (m <= 2) y++
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

        return [y, m, d]
    }

    static var _getHour = fn(int -> unix) {
        ;3600 seconds in an hour
        tmp := unix / 3600
        unix%=3600
        return tmp
    }

    static var _getMinute = fn(int -> unix) {
        ;60 seconds in a minute
        tmp := unix / 60
        unix%=60
        return tmp
    }

    static var _getSecond = fn(int -> unix) {
        return unix ;just return the leftover
    }

    static var now = fn() {
        return date::new:(syscall:(50))
    }
}
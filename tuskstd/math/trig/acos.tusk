;include:
;s tuskstd/math

var math = proto {

    ;using this taylor series
    ;   https://proofwiki.org/wiki/Power_Series_Expansion_for_Real_Arccosine_Function

    static var acos

    static ovld acos = fn(float -> theta, int -> prec) {
        pi_div_2 := 1.57079632679 ;pi / 2 needed for calculating acos

        sum := 0.0
        n := 0

        while (n < prec) {

            sum+=(
                (
                    (float -> math::factorial:(2 * n))
                    /
                    (
                        (float -> (2 ** (2 * n)))
                        *
                        (float -> (math::factorial:(n) ** 2))
                    )
                )
                *
                (
                    (theta ** (float -> (2 * n + 1)))
                    /
                    (float -> (2 * n + 1))
                )
            )

            n++
        }

        return pi_div_2 - sum
    }

    static ovld acos = fn(float -> theta) {
        return math::acos:(theta, 50) ;default to 100 prec
    }

    static ovld acos = fn(int -> theta) {
        return math::acos:(float -> theta)
    }
}